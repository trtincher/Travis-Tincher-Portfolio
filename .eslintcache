[{"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/reportWebVitals.js":"1","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/App.js":"2","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/pages/Landing/Landing.js":"3","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/pages/Grid/Grid.js":"4","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/About/About.js":"5","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Quote2/Quote2.js":"6","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/PortDeck/PortDeck.js":"7","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/pages/Portfolio/Portfolio.js":"8","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Card/Card.js":"9","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Skills/Skills.js":"10","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Quote1/Quote1.js":"11","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/data/skills.js":"12","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/index.js":"13","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Nav/NavLeft.js":"14","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Nav/Hamburger.js":"15","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Nav/TopBar.js":"16","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Footer/Footer.js":"17","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Contact/Contact.js":"18","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Contact/Confirmation.js":"19"},{"size":362,"mtime":1608044911219,"results":"20","hashOfConfig":"21"},{"size":1037,"mtime":1609264405754,"results":"22","hashOfConfig":"21"},{"size":1030,"mtime":1609264449489,"results":"23","hashOfConfig":"21"},{"size":607,"mtime":1608075354430,"results":"24","hashOfConfig":"21"},{"size":806,"mtime":1609176219477,"results":"25","hashOfConfig":"21"},{"size":393,"mtime":1608075354413,"results":"26","hashOfConfig":"21"},{"size":2001,"mtime":1608591065411,"results":"27","hashOfConfig":"21"},{"size":415,"mtime":1609175730568,"results":"28","hashOfConfig":"21"},{"size":1071,"mtime":1609265499305,"results":"29","hashOfConfig":"21"},{"size":536,"mtime":1609176113489,"results":"30","hashOfConfig":"21"},{"size":359,"mtime":1608075354409,"results":"31","hashOfConfig":"21"},{"size":1561,"mtime":1608588972698,"results":"32","hashOfConfig":"21"},{"size":500,"mtime":1608044911215,"results":"33","hashOfConfig":"21"},{"size":1803,"mtime":1609259717060,"results":"34","hashOfConfig":"21"},{"size":776,"mtime":1609180987680,"results":"35","hashOfConfig":"21"},{"size":851,"mtime":1609255959570,"results":"36","hashOfConfig":"21"},{"size":1030,"mtime":1610579355716,"results":"37","hashOfConfig":"21"},{"size":2694,"mtime":1609264332584,"results":"38","hashOfConfig":"21"},{"size":502,"mtime":1609261956162,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"h2bfep",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/reportWebVitals.js",[],["87","88"],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/App.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/pages/Landing/Landing.js",["89","90"],"import React from \"react\";\nimport \"./Landing.scss\";\nimport divider from \"../../assets/svgs/divider.svg\";\nimport email from \"../../assets/svgs/mail.svg\";\nimport linkedin from \"../../assets/svgs/linkedin.svg\";\nimport github from \"../../assets/svgs/github.svg\";\n\nfunction Landing({ onContactClick }) {\n  return (\n    <div className=\"Landing\" id=\"Home\">\n      <div className=\"landing_header_container\">\n        <h2 className=\"landing_name\">Travis Tincher</h2>\n        <h1 className=\"landing_discription\">Software Developer</h1>\n      </div>\n\n      <img src={divider} alt=\"page divider\" />\n\n      <div className=\"landing_image_container\">\n        <img src={email} alt=\"emal logo\" onClick={onContactClick} />\n        <a href=\"https://github.com/trtincher\" target=\"_blank\">\n          <img src={github} alt=\"github logo\" />\n        </a>\n        <a href=\"https://www.linkedin.com/in/travis-tincher/\" target=\"_blank\">\n          <img src={linkedin} alt=\"linkedin logo\" />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n",["91","92"],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/pages/Grid/Grid.js",[],["93","94"],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/About/About.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Quote2/Quote2.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/PortDeck/PortDeck.js",["95"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./PortDeck.scss\";\nimport Card from \"../Card/Card\";\n\n//googlesheet pucblic link https://docs.google.com/spreadsheets/d/18a96rZgz21FoZbbylPt5MaxESkS1ksvzUuyqnab3VKk/edit?usp=sharing\n//sheetAsJSON is how we will pull the data as JSON (javascript object notation)\n//googlesheet JSON template  = https://spreadsheets.google.com/feeds/cells/YOURGOOGLESHEETCODE/SHEETPAGENUMBER/public/full?alt=json\n\nconst sheetAsJSON =\n  \"https://spreadsheets.google.com/feeds/list/18a96rZgz21FoZbbylPt5MaxESkS1ksvzUuyqnab3VKk/od6/public/values?alt=json\";\n\nconst getProjects = async () => {\n  try {\n    let res = await axios.get(sheetAsJSON);\n\n    console.log(\"res in PortLinks\", res);\n    const projects = res.data.feed.entry.map((project) => {\n      return {\n        title: project.gsx$title.$t,\n        description: project.gsx$description.$t,\n        image: project.gsx$image.$t,\n        url: project.gsx$url.$t,\n        github: project.gsx$github.$t,\n        software: project.gsx$software.$t,\n      };\n    });\n    console.log(\"projects in get projects\", projects);\n    return projects;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst makeProjects = (projects) => {\n  const projectCards = projects.map((project) => {\n    console.log(\"project in makeProjects\", project);\n    return (\n      <Card\n        key={project.title}\n        title={project.title}\n        description={project.description}\n        image={project.image}\n        url={project.url}\n        github={project.github}\n        software={project.software}\n      />\n    );\n  });\n\n  return projectCards;\n};\n\nfunction PortDeck() {\n  const [projectList, setProjectList] = useState(\"...loading\");\n\n  useEffect(async () => {\n    let projects = await getProjects();\n    let list = makeProjects(projects);\n    setProjectList(list);\n  }, []);\n\n  console.log(\"projectList\", projectList);\n\n  return <div className=\"PortDeck\">{projectList}</div>;\n}\n\nexport default PortDeck;\n","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/pages/Portfolio/Portfolio.js",[],["96","97"],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Card/Card.js",["98","99","100"],"import React from \"react\";\nimport \"./Card.scss\";\n\nfunction Card({ title, description, image, url, github, software }) {\n  const descriptionArray = description.split(\"|\");\n\n  return (\n    <div className=\"Card\">\n      <div className=\"content_wrapper\">\n        <img src={image} alt=\"project image\" />\n        <div className=\"card_body\">\n          <div className=\"title\">\n            <h1>{title}</h1>\n            <p className=\"card_sub\">{software}</p>\n          </div>\n\n          <p className=\"card_article\">\n            {descriptionArray[0]}\n            <span>{descriptionArray[1]}</span>\n            {descriptionArray[2]}\n          </p>\n          <div className=\"card_btn_container\">\n            <div className=\"card_button\">\n              <a href={github} target=\"_blank\">\n                GitHub\n              </a>\n            </div>\n            <div className=\"card_button\">\n              <a href={url} target=\"_blank\">\n                See Website\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Skills/Skills.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Quote1/Quote1.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/data/skills.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/index.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Nav/NavLeft.js",["101"],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Nav/Hamburger.js",[],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Nav/TopBar.js",["102"],"import React from \"react\";\nimport \"./TopBar.scss\";\nimport logo from \"../../assets/svgs/squareLogo.svg\";\nimport resume from \"../../assets/pdf/Travis_Tincher_Resume.pdf\";\n\nfunction TopBar({ onContactClick }) {\n  return (\n    <>\n      <a href=\"#Home\">\n        <img src={logo} alt=\"logo\" className=\"desktop-logo\" />\n      </a>\n      <div className=\"TopBar\">\n        <ul>\n          <li>\n            <a href=\"#About\">About</a>\n          </li>\n          <li>\n            <a href=\"#Skills\">Skills</a>\n          </li>\n          <li>\n            <a href=\"#Portfolio\">Portfolio</a>\n          </li>\n          <li>\n            <p onClick={onContactClick}>Contact</p>\n          </li>\n          <li>\n            <a href={resume} target=\"_blank\">\n              Resume\n            </a>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default TopBar;\n","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Footer/Footer.js",["103"],"/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Contact/Contact.js",["104"],"import React, { useState, useEffect } from \"react\";\nimport \"./Contact.scss\";\nimport exit from \"../../assets/svgs/exit-icon.svg\";\nimport emailjs from \"emailjs-com\";\nimport Confirmation from \"./Confirmation\";\n\nfunction Contact({ top, onContactClick }) {\n  const [emailConfirmation, setEmailConfirmation] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    subject: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  useEffect(() => {\n    setEmailConfirmation(false);\n    setEmailError(false);\n    setFormValues({\n      name: \"\",\n      subject: \"\",\n      email: \"\",\n      message: \"\",\n    });\n  }, [top]);\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_5qhb5bm\",\n        \"template_g3rbt0j\",\n        e.target,\n        \"user_1tTUVlfVHJ0QgAOqETSmf\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          setEmailConfirmation(true);\n        },\n        (error) => {\n          console.log(error.text);\n          setEmailError(true);\n        }\n      );\n  }\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"Contact\" style={{ top: `${top}` }}>\n      {emailConfirmation ? <Confirmation /> : null}\n\n      <img src={exit} alt=\"exit icon\" onClick={onContactClick} />\n      <h1>Contact Me</h1>\n      <form onSubmit={sendEmail}>\n        <div className=\"form-field\">\n          <label for=\"name\">Full Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={formValues.name}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-field\">\n          <label for=\"subject\">Subject</label>\n          <input\n            type=\"text\"\n            name=\"subject\"\n            value={formValues.subject}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-field\">\n          <label for=\"email\">Your Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formValues.email}\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <label for=\"message\">Message</label>\n          <textarea\n            name=\"message\"\n            rows=\"12\"\n            value={formValues.message}\n            onChange={handleChange}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Contact;\n","/Users/travistincher/Desktop/Code/React-Portfolio/travis-tincher-portfolio/src/components/Contact/Confirmation.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":48,"nodeType":"111","endLine":20,"endColumn":63},{"ruleId":"109","severity":1,"message":"110","line":23,"column":63,"nodeType":"111","endLine":23,"endColumn":78},{"ruleId":"105","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":57,"column":13,"nodeType":"118","endLine":61,"endColumn":4},{"ruleId":"105","replacedBy":"119"},{"ruleId":"107","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":10,"column":9,"nodeType":"123","endLine":10,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":24,"column":32,"nodeType":"111","endLine":24,"endColumn":47},{"ruleId":"109","severity":1,"message":"110","line":29,"column":29,"nodeType":"111","endLine":29,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":51,"column":30,"nodeType":"111","endLine":51,"endColumn":45},{"ruleId":"109","severity":1,"message":"110","line":27,"column":30,"nodeType":"111","endLine":27,"endColumn":45},{"ruleId":"109","severity":1,"message":"110","line":33,"column":30,"nodeType":"111","endLine":33,"endColumn":45},{"ruleId":"124","severity":1,"message":"125","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":20},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["128"],["129"],["128"],["129"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["128"],["129"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'emailError' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]